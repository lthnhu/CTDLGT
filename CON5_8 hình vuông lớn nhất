#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int findLargestSquare(vector<vector<int>>& matrix, int N, int M) {
    vector<vector<int>> dp(N, vector<int>(M, 0));
    int maxSquareSize = 0;

    for (int i = 0; i < N; i++) {
        for (int j = 0; j < M; j++) {
            if (matrix[i][j] == 1) {
                if (i == 0 || j == 0) {
                    dp[i][j] = 1;
                } else {
                    dp[i][j] = min(dp[i - 1][j - 1], min(dp[i - 1][j], dp[i][j - 1])) + 1;
                }
                maxSquareSize = max(maxSquareSize, dp[i][j]);
            }
        }
    }

    return maxSquareSize;
}

int main() {
    int T;
    cin >> T;

    while (T--) {
        int N, M;
        cin >> N >> M;

        vector<vector<int>> matrix(N, vector<int>(M));
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < M; j++) {
                cin >> matrix[i][j];
            }
        }

        cout << findLargestSquare(matrix, N, M) << endl;
    }

    return 0;
}
